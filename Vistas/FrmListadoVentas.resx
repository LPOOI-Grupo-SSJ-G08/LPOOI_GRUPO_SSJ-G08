<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="saveFileDialog1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        /wPJ4rQ6Qt7F/QAAAABJRU5ErkJggg==
</value>
  </data>
</root>